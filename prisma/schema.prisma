// Datasource & Generator
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// Enums
enum UserRole {
  VIEWER
  CREATOR
  ADMIN
}

enum Category {
  ANYTHING
  WEEKENDS
  DINING
  SHOPPING
  STAY
  TECH
}

enum RequestStatus {
  PENDING
  ACCEPTED
  REJECTED
}

// Users synced from Clerk
model User {
  id           String         @id @default(cuid())
  clerkId      String         @unique
  fullName     String
  email        String         @unique
  role         UserRole       @default(VIEWER)
  events       Event[]
  requests     EventRequest[]
  createdAt    DateTime       @default(now())
  lastSignedIn DateTime?
}

model Event {
  id            String        @id @default(cuid())
  creator       User          @relation(fields: [creatorId], references: [id])
  creatorId     String
  creatorEmail  String
  organizer     String
  title         String
  description   String
  category      Category
  tags          String        @db.Text
  venue         String
  startDateTime DateTime
  endDateTime   DateTime
  imageUrls     String        @db.Text
  ticketLink    String
  adminApproved Boolean       @default(false)
  request       EventRequest? //one to one relation & admin don't need that's why optional
}

model EventRequest {
  id               String        @id @default(cuid())
  event            Event         @relation(fields: [eventId], references: [id], onDelete: Cascade)
  eventId          String        @unique
  requestedBy      User          @relation(fields: [requestedById], references: [id])
  requestedById    String
  requestedByEmail String
  status           RequestStatus @default(PENDING)
  createdAt        DateTime      @default(now())
}
